-- luacheck: ignore
local TS = require(game:GetService("ReplicatedStorage").RobloxTS.Include.RuntimeLib);
local _exports = {};
local AssetService = game:GetService("AssetService");
local BadgeService = game:GetService("BadgeService");
local Chat = game:GetService("Chat");
local CollectionService = game:GetService("CollectionService");
local ContentProvider = game:GetService("ContentProvider");
local ContextActionService = game:GetService("ContextActionService");
local DataStoreService = game:GetService("DataStoreService");
local Debris = game:GetService("Debris");
local GamePassService = game:GetService("GamePassService");
local GroupService = game:GetService("GroupService");
local GuiService = game:GetService("GuiService");
local HapticService = game:GetService("HapticService");
local HttpService = game:GetService("HttpService");
local InsertService = game:GetService("InsertService");
local KeyframeSequenceProvider = game:GetService("KeyframeSequenceProvider");
local Lighting = game:GetService("Lighting");
local LocalizationService = game:GetService("LocalizationService");
local LogService = game:GetService("LogService");
local MarketplaceService = game:GetService("MarketplaceService");
local PathfindingService = game:GetService("PathfindingService");
local PhysicsService = game:GetService("PhysicsService");
local Players = game:GetService("Players");
local PointsService = game:GetService("PointsService");
local ReplicatedFirst = game:GetService("ReplicatedFirst");
local ReplicatedStorage = game:GetService("ReplicatedStorage");
local RunService = game:GetService("RunService");
local ScriptContext = game:GetService("ScriptContext");
local Selection = game:GetService("Selection");
local ServerScriptService = game:GetService("ServerScriptService");
local ServerStorage = game:GetService("ServerStorage");
local SoundService = game:GetService("SoundService");
local StarterGui = game:GetService("StarterGui");
local StarterPlayer = game:GetService("StarterPlayer");
local Stats = game:GetService("Stats");
local Teams = game:GetService("Teams");
local TeleportService = game:GetService("TeleportService");
local TestService = game:GetService("TestService");
local TextService = game:GetService("TextService");
local TweenService = game:GetService("TweenService");
local UserInputService = game:GetService("UserInputService");
local VRService = game:GetService("VRService");
local Workspace = game:GetService("Workspace");
_exports.AssetService = AssetService;
_exports.BadgeService = BadgeService;
_exports.Chat = Chat;
_exports.CollectionService = CollectionService;
_exports.ContentProvider = ContentProvider;
_exports.ContextActionService = ContextActionService;
_exports.DataStoreService = DataStoreService;
_exports.Debris = Debris;
_exports.GamePassService = GamePassService;
_exports.GroupService = GroupService;
_exports.GuiService = GuiService;
_exports.HapticService = HapticService;
_exports.HttpService = HttpService;
_exports.InsertService = InsertService;
_exports.KeyframeSequenceProvider = KeyframeSequenceProvider;
_exports.Lighting = Lighting;
_exports.LocalizationService = LocalizationService;
_exports.LogService = LogService;
_exports.MarketplaceService = MarketplaceService;
_exports.PathfindingService = PathfindingService;
_exports.PhysicsService = PhysicsService;
_exports.Players = Players;
_exports.PointsService = PointsService;
_exports.ReplicatedFirst = ReplicatedFirst;
_exports.ReplicatedStorage = ReplicatedStorage;
_exports.RunService = RunService;
_exports.ScriptContext = ScriptContext;
_exports.Selection = Selection;
_exports.ServerScriptService = ServerScriptService;
_exports.ServerStorage = ServerStorage;
_exports.SoundService = SoundService;
_exports.StarterGui = StarterGui;
_exports.StarterPlayer = StarterPlayer;
_exports.Stats = Stats;
_exports.Teams = Teams;
_exports.TeleportService = TeleportService;
_exports.TestService = TestService;
_exports.TextService = TextService;
_exports.TweenService = TweenService;
_exports.UserInputService = UserInputService;
_exports.VRService = VRService;
_exports.Workspace = Workspace;
return _exports;
